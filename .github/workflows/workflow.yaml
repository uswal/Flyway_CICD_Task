# This is a basic workflow to help you get started with Actions

name: flyway_tool

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: change directory
        run: cd $GITHUB_WORKSPACE
      - name: current direcotry
        run: pwd  
      
      - name: Java version
        run: java --version

      - name: install flyway
        run: |
          mkdir flyway_tool
          cd flyway_tool
          pwd
          wget https://download.red-gate.com/checkforupdates/FlywayDesktopLinuxX64.tar.gz
          tar -zxf FlywayDesktopLinuxX64.tar.gz
          cd ..
          
      # - name: exporting path
      #   run: |
      #     pwd
      #     export PATH=$PATH:/home/runner/work/Activity-15/Activity-15/flyway_tool/flyway

      - name: running the config files for migration
        run: |
          pwd
          export PATH=$PATH:/home/runner/work/Activity-15/Activity-15/flyway_tool/flyway
          export JAVA_ARGS="--add-opens=java.base/java.nio=ALL-UNNAMED"
          flyway -color=always -configFiles=./conf/dev_flyway.conf -X migrate
          flyway -color=always -configFiles=./conf/uat_flyway.conf -X migrate
          flyway -color=always -configFiles=./conf/prod_flyway.conf -X migrate

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     ls
      #     echo "---------Local variables----------"
      #     echo "$PROVISION_SNOWFLAKE_URL"
      #     echo "$PROVISION_USER"
      #     curl -fO https://repo.phdata.io/yDr95R4UUTucC9DR/toolkit-cli/maven/io/phdata/toolkit/toolkit-cli/0.23.1/toolkit-cli-0.23.1.zip
      #     unzip toolkit-cli-0.23.1.zip
      #     pwd
      #     export PATH=$PATH:/home/runner/work/Provision_Tool_Assignment/Provision_Tool_Assignment/toolkit-cli-0.23.1
                    
      #     pwd
      #     ls
      #     toolkit provision apply

